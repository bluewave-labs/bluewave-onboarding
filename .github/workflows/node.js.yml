name: Node.js CI

on:
  push:
    branches: ["develop", "master"]
  pull_request:
    branches: ["develop", "master"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true

      # Clear npm cache
      - name: Clear npm cache
        run: npm cache clean --force

      # Check if package.json has changed
      - name: Check if package.json has changed
        id: check_packages
        run: |
          git diff --quiet HEAD^ HEAD -- '**/package.json' || echo "packages_changed=true" >> $GITHUB_OUTPUT

      # Remove backend node_modules and package-lock.json if packages changed
      - name: Remove backend node_modules and package-lock.json
        if: steps.check_packages.outputs.packages_changed == 'true'
        run: |
          rm -rf ./backend/node_modules ./backend/package-lock.json

      # Remove frontend node_modules and package-lock.json if packages changed
      - name: Remove frontend node_modules and package-lock.json
        if: steps.check_packages.outputs.packages_changed == 'true'
        run: |
          rm -rf ./frontend/node_modules ./frontend/package-lock.json

      # # Cache backend dependencies
      # - name: Cache backend dependencies
      #   uses: actions/cache@v3
      #   with:
      #     path: ./backend/node_modules
      #     key: backend-node-modules-${{ matrix.node-version }}-${{ hashFiles('backend/package-lock.json') }}
      #     restore-keys: |
      #       backend-node-modules-${{ matrix.node-version }}-

      # # Cache frontend dependencies
      # - name: Cache frontend dependencies
      #   uses: actions/cache@v3
      #   with:
      #     path: ./frontend/node_modules
      #     key: frontend-node-modules-${{ matrix.node-version }}-${{ hashFiles('frontend/package-lock.json') }}
      #     restore-keys: |
      #       frontend-node-modules-${{ matrix.node-version }}-

      - name: Install dependencies for backend
        working-directory: ./backend
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Install dependencies for frontend
        working-directory: ./frontend
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build backend
        working-directory: ./backend
        run: npm run build --if-present

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build --if-present

      - name: Run tests for frontend
        working-directory: ./frontend
        run: npm test

      - name: Run tests for backend
        working-directory: ./backend
        run: npm test

      - name: Run Docker container
        run: docker compose up --build -d
